# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
         checkout
    

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      

    
    - name: Install packages
      run: 
       sudo apt-get update && sudo apt-get install wget zip unzip -y
      
    - name: Build WAR
      run :
        cd CloudWebApp/
        ./mvnw clean install
        cd target
        ls -al
        cd ../..

    
   # - name: Scripts
   #   run:
    #        cd CloudWebApp
     #       pwd
      #      ls -al
       #     mvn clean package -DskipTests=true
        #    cd target/
         #   ls -al
          #  cd ../
           # pwd
            #ls -al
      
    - name: Zip Artifact
      run: |
            pwd
            mkdir codedeploy_artifact
            cp infrastructure/aws/codedeploy/*.yml .
            cp infrastructure/aws/codedeploy/*.sh .
            zip -r csye6225-web-app-${CIRCLE_BUILD_NUM}.zip CloudWebApp/target//demo-0.0.1-SNAPSHOT.war *.yml *.sh
            ls -al
            mv csye6225-web-app-${CIRCLE_BUILD_NUM}.zip codedeploy_artifact/
            ls -al
            pwd
            cd ..
            pwd
            ls -al


    - name : Install pip
      run:
          
            sudo apt-get install python3
            python3 --version
            sudo apt install python3-pip
            pip3 --version  
            
             
    - name: Install awscli
      run: sudo pip install awscli
      
            
    - name: deploy to s3
      run: |
            aws configure list
            aws s3 sync codedeploy_artifact s3://code-deploy.csye6225-spring2019-${BUCKETNAME}.me --region us-east-1

      
    - name: deploy to ec2
      run: |
            aws deploy create-deployment --application-name csye6225-webapp --deployment-config-name CodeDeployDefault.AllAtOnce --region us-east-1 --deployment-group-name csye6225-webapp-deployment --description "csye6225 create" --s3-location bucket=code-deploy.csye6225-spring2019-${BUCKETNAME}.me,bundleType=zip,key=csye6225-web-app-${CIRCLE_BUILD_NUM}.zip
   
    - name: Build with Maven
      run: 
         cd CloudWebApp
         mvn -B package --file pom.xml   
